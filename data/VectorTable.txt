// vectorlist
const def_VL_PrintDebugMessage	= 1;	// VectorList作成時のエラーチェック表示をするか

const def_VLP_AomukeOki			= 290;	// 290 あお向けダウン
const def_VLP_UtubuseOki		= 290;	// 291 うつ伏せダウン
const def_VLP_FatalOki			= 290;	// 292 重傷ダウン

const def_VLP_Atama1			= 300;	// 300 頭やられ弱
const def_VLP_Atama2			= 303;	// 303 頭やられ中
const def_VLP_Atama3			= 306;	// 306 頭やられ強

const def_VLP_Hara1				= 301;	// 301 腹やられ弱
const def_VLP_Hara2				= 304;	// 304 腹やられ中
const def_VLP_Hara3				= 307;	// 307 腹やられ強

const def_VLP_Kutu1				= 302;	// 302 屈やられ弱
const def_VLP_Kutu2				= 305;	// 305 屈やられ中
const def_VLP_Kutu3				= 308;	// 308 屈やられ強

const def_VLP_Uki				= 320;	// 320 浮きやられ
const def_VLP_Oti				= 324;	// 324 落下やられ

const def_VLP_Sirimoti			= 312;	// 312 しりもちやられ
const def_VLP_SirimotiBound		= 313;	// 313 しりもち跳ね・ダウン

const def_VLP_MaeTentou			= 320;	// 326 前転倒やられ
const def_VLP_HizaKuzure		= 307;	// 327 膝崩れやられ
const def_VLP_HizaKuzureOti		= 320;	// 328 膝崩れやられ→倒れ始める
const def_VLP_SuityokuUki		= 330;	// 330 垂直浮きやられ

const def_VLP_AomukeOiutiBound	= 348;	// 348 仰向け追い討ち・ダウン　※他でも348を決めうち指定してる
const def_VLP_UtubuseOiutiBound	= 348;	// 348 うつ伏せ追い討ち・ダウン

const def_VLP_AomukeBound		= 350;	// 350 仰向け跳ね・ダウン
const def_VLP_UtubuseBound		= 350;	// 351 うつ伏せ跳ね
const def_VLP_UtubuseDown		= 350;	// 352 →うつ伏せダウン

const def_VLP_UtubuseBigBound	= 320;	// 353 うつ伏せ跳ね大
const def_VLP_UtubuseBigDown	= 350;	// 354 →うつ伏せダウン大

const def_VLP_UtubuseSlideBound	= 320;	// 355 うつ伏せ跳ね大
const def_VLP_UtubuseSlideDown	= 350;	// 356 →うつ伏せダウン大

const def_VLP_HaraBound			= 335;	// 331 腹吹き飛び

const def_VLP_KiriUkiNaname		= 320;	// 333 きりもみ吹き飛び・斜め
const def_VLP_KiriUkiSuityoku	= 334;	// 334 きりもみ吹き飛び・垂直

const def_VLP_KiriUkiYoko		= 335;	// 335 きりもみ吹き飛び・横
const def_VLP_Kirimomi			= 336;	// 336 きりもみやられ

const def_VLP_UkiRelease		= 324;	// 345 浮き落下開放
const def_VLP_SuityokuRelease	= 324;	// 346 垂直落下開放

const def_VLP_AirAutoRecover	= 32;	// 33 オートリカバリー
const def_VLP_WallBound			= 320;	// 340 壁バウンド


// なんとなく定数定義
const def_VL_GuardPat_Ground	= 17;
const def_VL_GuardPat_Air 		= 19;
const def_VL_GuardPat_Crouch	= 18;
const def_VL_NagenukePat		= 60;
const def_VL_NagenukerarePat	= 17;

//ベクトルタイム
//const def_VL_VT_Hit_Std_LV0		= 9;  // 未使用　　　超弱
const def_VL_VT_Hit_Std_LV1		= 13; // Ver.1.03:13 弱
const def_VL_VT_Hit_Std_LV2		= 15; // Ver.1.03:16 中
const def_VL_VT_Hit_Std_LV3		= 17; // Ver.1.03:18 強
const def_VL_VT_Hit_Std_LV4		= 19; // Ver.1.03:23 特大
const def_VL_VT_Hit_Std_LV5		= 21; // 未使用ではない超大

const def_VL_VT_Hit_Cro_LV1		= 14;
const def_VL_VT_Hit_Cro_LV2		= 16;
const def_VL_VT_Hit_Cro_LV3		= 18;
const def_VL_VT_Hit_Cro_LV4		= 20;
const def_VL_VT_Hit_Cro_LV5		= 22;

const def_VL_VT_Hit_Std_JLV1		= 13;
const def_VL_VT_Hit_Std_JLV2		= 15;
const def_VL_VT_Hit_Std_JLV3		= 17;
const def_VL_VT_Hit_Std_JLV4		= 19;
const def_VL_VT_Hit_Std_JLV5		= 21;

const def_VL_VT_Hit_Cro_JLV1		= 14;
const def_VL_VT_Hit_Cro_JLV2		= 16;
const def_VL_VT_Hit_Cro_JLV3		= 18;
const def_VL_VT_Hit_Cro_JLV4		= 20;
const def_VL_VT_Hit_Cro_JLV5		= 22;

// 使ってない
const def_VL_VT_Hit_Air_LV0		= 16; //14
const def_VL_VT_Hit_Air_LV1		= 18; //14
const def_VL_VT_Hit_Air_LV2		= 20; //20
const def_VL_VT_Hit_Air_LV3		= 22; //24
const def_VL_VT_Hit_Air_LV4		= 24;
const def_VL_VT_Hit_Air_LV5		= 26;

// ガードのけぞり時間
const def_VL_VT_Guard_Std_LV1	= 12;
const def_VL_VT_Guard_Std_LV2	= 14;
const def_VL_VT_Guard_Std_LV3	= 16;
const def_VL_VT_Guard_Std_LV4	= 17;
const def_VL_VT_Guard_Std_LV5	= 19;

const def_VL_VT_Guard_Air_LV1	= 10;
const def_VL_VT_Guard_Air_LV2	= 12;
const def_VL_VT_Guard_Air_LV3	= 14;
const def_VL_VT_Guard_Air_LV4	= 16;
const def_VL_VT_Guard_Air_LV5	= 18;


const def_VL_KoVector = 99; // そのベクトルでKOした時に代わりに使うベクトル番号 99
const def_VL_GroundKoVector = 99; // そのベクトルでKOした時に代わりに使うベクトル番号 254

const def_VL_HitFlag_AirAtkA	= 0; //空攻撃浮き弱
const def_VL_HitFlag_AirAtkB	= 1; //空攻撃浮き中
const def_VL_HitFlag_AirAtkC	= 2; //空攻撃浮き強
//const def_VL_HitFlag_Aerial	= 3; //エリアル吹き飛び（ジャンプ攻撃の浮きが高くなる）　廃止

// ※実はフラグになっている
const def_VL_Pow_LV0			= 1; //超弱（無声やられ）
const def_VL_Pow_LV1			= 2; //弱やられ
const def_VL_Pow_LV2			= 0; //デフォルトは中やられ(初期値は0なので)
const def_VL_Pow_LV3			= 4; //強やられ
const def_VL_Pow_Furimuki		= 8; // 振り向き属性（攻撃してきたものに振り向く。基本は相手操作親の向き依存。）
const def_VL_Pow_NoAdvFrameSet	= 16; // アドバでのフレーム固定を受け付けない
const def_VL_Pow_GuardFloat		= 32; // ガードで浮くやつ（無敵がつく）

//ベクトル登録を楽にするためのテーブル
VectorSample <- {}; // テーブル生成
VectorSample.Tbl <- []; // Tbl生成
//VectorSample.Tbl.resize(100); // 適当に拡張
/*
VectorSample.Tbl.append(
{
	name = "ＧＣ吹き飛ばし",
	hit_stand	= { num="GC吹き飛ばし"	, reverse=0, novec=0 },
	hit_air		= { num="GC吹き飛ばし"	, reverse=0, novec=0 },
	hit_crouch	= { num="GC吹き飛ばし"	, reverse=0, novec=0 },
	guard_stand	= { num="GC立ガード"	, reverse=0, novec=0 },
	guard_air	= { num="GC空ガード"	, reverse=0, novec=0 },
	guard_crouch	= { num="GC屈ガード"	, reverse=0, novec=0 },
})
*/

// VectorSample.Tbl.append(
// {
	// name = "リープやられ",
	// hit_stand	= { num="リープ立やられ"	, reverse=0, novec=0 },
	// hit_air		= { num="リープ空やられ"	, reverse=0, novec=0 },
	// hit_crouch	= { num="リープ屈やられ"	, reverse=0, novec=0 },
	// guard_stand	= { num="リープ立ガード"	, reverse=0, novec=0 },
	// guard_air	= { num="リープ空ガード"	, reverse=0, novec=0 },
	// guard_crouch	= { num="リープ屈ガード"	, reverse=0, novec=0 },
// })

VectorSample.Tbl.append(
{
	name = "リープきりもみ浮き",
	hit_stand	= { num="リープきりもみ浮き"	, reverse=0, novec=0 },
	hit_air		= { num="リープきりもみ浮き"	, reverse=0, novec=0 },
	hit_crouch	= { num="リープきりもみ浮き"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜めスライド中",
	hit_stand	= { num="斜めスライド中"	, reverse=0, novec=0 },
	hit_air		= { num="斜めスライド中"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜めスライド中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜めスライド強",
	hit_stand	= { num="斜めスライド強"	, reverse=0, novec=0 },
	hit_air		= { num="斜めスライド強"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜めスライド強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "壁はりつき中",
	hit_stand	= { num="壁はりつき中"	, reverse=0, novec=0 },
	hit_air		= { num="壁はりつき中"	, reverse=0, novec=0 },
	hit_crouch	= { num="壁はりつき中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "壁はりつき強",
	hit_stand	= { num="壁はりつき強"	, reverse=0, novec=0 },
	hit_air		= { num="壁はりつき強"	, reverse=0, novec=0 },
	hit_crouch	= { num="壁はりつき強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "空攻撃弱",
	hit_stand	= { num="空攻撃頭やられ弱"	, reverse=0, novec=0 },
	hit_air		= { num="空攻撃浮き弱"	, reverse=0, novec=0 },
	hit_crouch	= { num="空攻撃屈やられ弱"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード弱"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード弱"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード弱"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "空攻撃中",
	hit_stand	= { num="空攻撃頭やられ中"	, reverse=0, novec=0 },
	hit_air		= { num="空攻撃浮き中"	, reverse=0, novec=0 },
	hit_crouch	= { num="空攻撃屈やられ中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "空攻撃強",
	hit_stand	= { num="空攻撃頭やられ強"	, reverse=0, novec=0 },
	hit_air		= { num="空攻撃浮き強"	, reverse=0, novec=0 },
	hit_crouch	= { num="空攻撃屈やられ強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})


VectorSample.Tbl.append(
{
	name = "頭やられ弱",
	hit_stand	= { num="頭やられ弱"	, reverse=0, novec=0 },
	hit_air		= { num="浮き弱"		, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ弱"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード弱"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード弱"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード弱"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "頭やられ中",
	hit_stand	= { num="頭やられ中"	, reverse=0, novec=0 },
	hit_air		= { num="浮き中"		, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "頭やられ強",
	hit_stand	= { num="頭やられ強"	, reverse=0, novec=0 },
	hit_air		= { num="浮き強"		, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹やられ弱",
	hit_stand	= { num="腹やられ弱"	, reverse=0, novec=0 },
	hit_air		= { num="浮き弱"		, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ弱"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード弱"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード弱"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード弱"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹やられ中",
	hit_stand	= { num="腹やられ中"	, reverse=0, novec=0 },
	hit_air		= { num="浮き中"		, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹やられ強",
	hit_stand	= { num="腹やられ強"	, reverse=0, novec=0 },
	hit_air		= { num="浮き強"		, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "浮き中",
	hit_stand	= { num="浮き中"		, reverse=0, novec=0 },
	hit_air		= { num="浮き中"		, reverse=0, novec=0 },
	hit_crouch	= { num="浮き中"		, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "浮き強",
	hit_stand	= { num="浮き強"		, reverse=0, novec=0 },
	hit_air		= { num="浮き強"		, reverse=0, novec=0 },
	hit_crouch	= { num="浮き強"		, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "垂直浮き中",
	hit_stand	= { num="垂直浮き中"	, reverse=0, novec=0 },
	hit_air		= { num="垂直浮き中"	, reverse=0, novec=0 },
	hit_crouch	= { num="垂直浮き中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "垂直浮き強",
	hit_stand	= { num="垂直浮き強"	, reverse=0, novec=0 },
	hit_air		= { num="垂直浮き強"	, reverse=0, novec=0 },
	hit_crouch	= { num="垂直浮き強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "垂直きりもみ浮き中",
	hit_stand	= { num="垂直きりもみ浮き中"	, reverse=0, novec=0 },
	hit_air		= { num="垂直きりもみ浮き中"	, reverse=0, novec=0 },
	hit_crouch	= { num="垂直きりもみ浮き中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "垂直きりもみ浮き強",
	hit_stand	= { num="垂直きりもみ浮き強"	, reverse=0, novec=0 },
	hit_air		= { num="垂直きりもみ浮き強"	, reverse=0, novec=0 },
	hit_crouch	= { num="垂直きりもみ浮き強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "垂直きりもみ浮き特",
	hit_stand	= { num="垂直きりもみ浮き特"	, reverse=0, novec=0 },
	hit_air		= { num="垂直きりもみ浮き特"	, reverse=0, novec=0 },
	hit_crouch	= { num="垂直きりもみ浮き特"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "垂直きりもみ浮き超",
	hit_stand	= { num="垂直きりもみ浮き超"	, reverse=0, novec=0 },
	hit_air		= { num="垂直きりもみ浮き超"	, reverse=0, novec=0 },
	hit_crouch	= { num="垂直きりもみ浮き超"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})


VectorSample.Tbl.append(
{
	name = "斜め浮き中",
	hit_stand	= { num="斜め浮き中"	, reverse=0, novec=0 },
	hit_air		= { num="斜め浮き中"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜め浮き中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜め浮き強",
	hit_stand	= { num="斜め浮き強"	, reverse=0, novec=0 },
	hit_air		= { num="斜め浮き強"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜め浮き強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横浮き中",
	hit_stand	= { num="横浮き中"	, reverse=0, novec=0 },
	hit_air		= { num="横浮き中"	, reverse=0, novec=0 },
	hit_crouch	= { num="横浮き中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横浮き強",
	hit_stand	= { num="横浮き強"	, reverse=0, novec=0 },
	hit_air		= { num="横浮き強"	, reverse=0, novec=0 },
	hit_crouch	= { num="横浮き強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横きりもみ浮き中",
	hit_stand	= { num="横きりもみ浮き中"	, reverse=0, novec=0 },
	hit_air		= { num="横きりもみ浮き中"	, reverse=0, novec=0 },
	hit_crouch	= { num="横きりもみ浮き中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横きりもみ浮き強",
	hit_stand	= { num="横きりもみ浮き強"	, reverse=0, novec=0 },
	hit_air		= { num="横きりもみ浮き強"	, reverse=0, novec=0 },
	hit_crouch	= { num="横きりもみ浮き強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横きりもみ浮き特",
	hit_stand	= { num="横きりもみ浮き特"	, reverse=0, novec=0 },
	hit_air		= { num="横きりもみ浮き特"	, reverse=0, novec=0 },
	hit_crouch	= { num="横きりもみ浮き特"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横きりもみ浮き超",
	hit_stand	= { num="横きりもみ浮き超"	, reverse=0, novec=0 },
	hit_air		= { num="横きりもみ浮き超"	, reverse=0, novec=0 },
	hit_crouch	= { num="横きりもみ浮き超"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "バウンド中",
	hit_stand	= { num="バウンド中"	, reverse=0, novec=0 },
	hit_air		= { num="バウンド中"	, reverse=0, novec=0 },
	hit_crouch	= { num="バウンド中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "バウンド強",
	hit_stand	= { num="バウンド強"	, reverse=0, novec=0 },
	hit_air		= { num="バウンド強"	, reverse=0, novec=0 },
	hit_crouch	= { num="バウンド強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜めバウンド中",
	hit_stand	= { num="斜めバウンド中"	, reverse=0, novec=0 },
	hit_air		= { num="斜めバウンド中"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜めバウンド中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜めバウンド強",
	hit_stand	= { num="斜めバウンド強"	, reverse=0, novec=0 },
	hit_air		= { num="斜めバウンド強"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜めバウンド強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "低浮き中",
	hit_stand	= { num="低浮き中"	, reverse=0, novec=0 },
	hit_air		= { num="低浮き中"	, reverse=0, novec=0 },
	hit_crouch	= { num="低浮き中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "低浮き強",
	hit_stand	= { num="低浮き強"	, reverse=0, novec=0 },
	hit_air		= { num="低浮き強"	, reverse=0, novec=0 },
	hit_crouch	= { num="低浮き強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "無声ダウン",
	hit_stand	= { num="無声ダウン"	, reverse=0, novec=0 },
	hit_air		= { num="無声ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="無声ダウン"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "壁バウンド中",
	hit_stand	= { num="壁バウンド中"	, reverse=0, novec=0 },
	hit_air		= { num="壁バウンド中"	, reverse=0, novec=0 },
	hit_crouch	= { num="壁バウンド中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "壁バウンド強",
	hit_stand	= { num="壁バウンド強"	, reverse=0, novec=0 },
	hit_air		= { num="壁バウンド強"	, reverse=0, novec=0 },
	hit_crouch	= { num="壁バウンド強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

/*　コピペ用
VectorSample.Tbl.append(
{
	name = "",
	hit_stand	= { num=""	, reverse=0, novec=0 },
	hit_air		= { num=""	, reverse=0, novec=0 },
	hit_crouch	= { num=""	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})
*/


// ヒットストップ情報 
/*
HitStopList <-
{
	Light	= { value =  8 },
	Middle	= { value =  9 },
	Heavy	= { value = 10 },
	None		= { value =  1 },
	S_Heavy	= { value = 15 },
	SS_Heavy	= { value = 27 },
	S_Light	= { value =  3 },
}
*/

// name欄があるとHan6で表示される
HitStopList <-
{
	Light = { name = "弱(8)", value = 8 },
	Middle = { name="中(10)", value = 10 }, // 基本的にこれしか使わない
	Heavy = { name="強(12)", value = 12 },
	None = { name="なし(1)", value = 1 },
	S_Heavy = { name="特大(14)", value = 14 },
	SS_Heavy = { name="超大(28)", value = 28 },
	S_Light = { name="超弱(4)", value = 4 },

	// 拡張スロット
	EX = 
	[
		//微 -2したやつ
		{ name = "微超弱(2)",  value =  2 },
		{ name = "微弱(6)",  value =  6 },
		{ name = "微中(8)",  value =  8 },
		{ name = "微強(9)",  value =  9 },
		{ name = "特大１(16)",  value =  16 },
		{ name = "特大２(18)",  value =  18 },
		{ name = "特大３(20)",  value =  20 },
		{ name = "特大４(22)",  value =  22 },
		{ name = "特大５(24)",  value =  24 },
		{ name = "特大６(26)",  value =  26 },
	]
}


//-----------------------------------------------------------------------------
// ヒットマークリスト 基本
// 定義がないと基本値が入る
// 単体のものが１つでも足りないとエラーとなって基本値が入る
// （数字）はヒットマークの大きさイメージ
HitMarkList <-
{
	List = 
	[
		{  name = "パンチ 弱（１）", word = "Eff_Hit_PunchA"  },
		{  name = "パンチ 中（２）", word = "Eff_Hit_PunchB"  },
		{  name = "パンチ 強（３）", word = "Eff_Hit_PunchC"  },
		{  name = "キック 弱（１）", word = "Eff_Hit_KickA"  },
		{  name = "キック 中（２）", word = "Eff_Hit_KickB"  },
		{  name = "キック 強（３）", word = "Eff_Hit_KickC"  },

		{  name = "パンチ 特（４）", word = "Eff_Hit_PunchD"  },
		{  name = "キック 特（４）", word = "Eff_Hit_KickD"  },
		
		{  name = "旧斬り", word = "Eff_Hit_SlashOld"  },

		{  name = "燃え", word = "Eff_Hit_Fire"  },
		{  name = "凍結", word = "Eff_Hit_Freeze"  },
		{  name = "電撃", word = "Eff_Hit_Thunder"  },
		{  name = "発光 A", word = "Eff_Hit_FlashA"  },
		{  name = "発光 B", word = "Eff_Hit_FlashB"  },

		{  name = "なし", word = ""  },

		{  name = "発光？", word = "Eff_Hit_Flash"  },

		{  name = "斬り 間引き（２）", word = "Eff_Hit_Slash"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "斬り 特（４）", word = "Eff_Hit_SlashD"  },
		{  name = "斬り 弱（１）", word = "Eff_Hit_SlashA"  },
		{  name = "斬り 中（２）", word = "Eff_Hit_SlashB"  },
		{  name = "斬り 強（３）", word = "Eff_Hit_SlashC"  },

		{  name = "突き 間引き（２）", word = "Eff_Hit_Thrust"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "突き 特（４）", word = "Eff_Hit_ThrustD"  },
		{  name = "突き 弱（１）", word = "Eff_Hit_ThrustA"  },
		{  name = "突き 中（２）", word = "Eff_Hit_ThrustB"  },
		{  name = "突き 強（３）", word = "Eff_Hit_ThrustC"  },
		
		{  name = "パンチ 間引き（２）", word = "Eff_Hit_Punch"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "キック 間引き（２）", word = "Eff_Hit_Kick"  }, //多段ヒット用、持続短くてパーティクルなし
		
		{  name = "パンチ 〆（４）", word = "Eff_Hit_PunchFinish"  }, //とどめ用特　ＳＥ違い
		{  name = "キック 〆（４）", word = "Eff_Hit_KickFinish"  },
		{  name = "斬り 〆（４）", word = "Eff_Hit_SlashFinish"  },
		{  name = "突き 〆（４）", word = "Eff_Hit_ThrustFinish"  },
		
		{  name = "固有1 間引き（２）", word = "Eff_Hit_Chr1Atk"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "固有1 特（４）", word = "Eff_Hit_Chr1AtkD"  },
		{  name = "固有1 弱（１）", word = "Eff_Hit_Chr1AtkA"  },
		{  name = "固有1 中（２）", word = "Eff_Hit_Chr1AtkB"  },
		{  name = "固有1 強（３）", word = "Eff_Hit_Chr1AtkC"  },
	]

	// 単体
	Guard = {  name = "", word = "Eff_Hit_Guard"  }, // 通常ガードエフェクト
	GuardEx = {  name = "", word = "Eff_Hit_Guard"  }, // SPガード状態でのガードエフェクト
	CounterHit = {  name = "", word = "Eff_Hit_Counter"  }, // カウンターヒットエフェクト
}


//VectorList.SetTbl.append()

VectorList <-
{
	// 「021」のような書式は８進数になるので使用不可
	/////////////////////
	Tbl = // ベクトル数値テーブル
	[
		[   0,  1300,     0,  -80,   0 ], // 頭＆腹＆屈弱やられ
		[   1,  1500,     0,  -80,   0 ], // 頭＆腹＆屈中やられ
		[   2,  1800,     0,  -80,   0 ], // 頭＆腹＆屈強やられ
		[   6,  2200,     0,  -80,   0 ], // 特大のけぞり
		

		// 叩きつけ
		[  20,     0,     0,    0,   0 ], // 固め＆のけぞらない＆地上ガードクラッシュ
		
		//この辺にバウンド系の最初の吹き飛びベクトルを入れる
		[  24,  2000,     0,  -100,   0 ], // 投げ抜けられベクトル	

		// 転倒
		// 025 300 -2000 0 250 // 後ろ転倒
		[  26,   750, -2000,    0, 250 ], // 前転倒＆後ろ転倒
		
		[  30,  600, -2200,    0, 250 ], // ジャンプ攻撃浮き弱
		[  31,  800, -2400,    0, 250 ], // ジャンプ攻撃浮き中
		[  32,  900, -2600,    0, 250 ], // ジャンプ攻撃浮き強
		
		[  37, 1200, -1000,    0, 250 ], // 叩き浮き短中
		[  38, 1600, -1000,    0, 250 ], // 叩き浮き短強

		[  39, 2200, -1000,    0, 250 ], // 叩き浮き中
		[  40, 2600, -1000,    0, 250 ], // 叩き浮き強
		
		[  41, 3400,  3000,    0, 250 ], // 横きりもみバウンド中
		[  42, 3800,  3600,    0, 250 ], // 横きりもみバウンド強

		[  43, 7000, -3500,    0, 200 ], // 内壁大バウンド特（ゼロ）
		
		[  45,  600, -6500,    0, 250 ], // ピンボール強↑
		[  46,  600,  5800,    0, 250 ], // ピンボール強↓

		[  60,  1300,     0,  -120,   0 ], // 頭＆腹弱やられ（離れない）
		[  61,  1500,     0,  -120,   0 ], // 頭＆腹中やられ（離れない）
		[  62,  1800,     0,  -120,   0 ], // 頭＆腹強やられ（離れない）
		
		[  75,  1300,     0,  -80,   0 ], // ガードやられ 弱
		[  76,  1500,     0,  -80,   0 ], // ガードやられ 中
		[  77,  1800,     0,  -80,   0 ], // ガードやられ 強
		[  78,  2200,     0,  -80,   0 ], // ガードやられ 特		
		[  79,  2500,     0,  -80,   0 ], // ガードやられ 超
		
		[  90,  1000,     0,  -80,   0 ], // 頭＆腹＆屈短中やられ
		[  91,  1300,     0,  -80,   0 ], // 頭＆腹＆屈短強やられ

		[ 100, 5000, -2800,    0, 250 ], // 横きりもみ低浮き特
		[ 101, 8000, -3000,    0, 250 ], // 横きりもみ低浮き超		
		
		[ 103,  300, -4200,    0, 250 ], // 高垂直浮き中
		[ 104,  600, -4800,    0, 250 ], // 高垂直浮き強
		
		[ 105, 3800, 0,    0, 0 ], // 水平きりもみはりつき
		[ 106, 4200, 0,    0, 0 ], // 水平きりもみはりつき

		[ 125, 3400,  3600,    0, 250 ], // 斜めバウンド特
		[ 126, 4200,  4500,    0, 250 ], // 斜めバウンド超
		
		[ 110,  600, -2200,    0, 250 ], // 浮き弱
		[ 111,  800, -2400,    0, 250 ], // 浮き中
		[ 112,  900, -2600,    0, 250 ], // 浮き強	
		
		[ 113,  300, -3600,    0, 250 ], // 垂直浮き中
		[ 114,  600, -4000,    0, 250 ], // 垂直浮き強
		
		[ 115,  300, -5000,    0, 250 ], // 垂直きりもみ浮き中
		[ 116,  600, -5800,    0, 250 ], // 垂直きりもみ浮き強

		[ 117, 1400, -3300,    0, 250 ], // 斜め浮き中
		[ 118, 1700, -3600,    0, 250 ], // 斜め浮き強
		
		[ 119, 2200, -2400,    0, 250 ], // 横浮き中
		[ 120, 2600, -2600,    0, 250 ], // 横浮き強
		
		[ 121, 3400, -2800,    0, 250 ], // 横きりもみ浮き中
		[ 122, 3800, -3000,    0, 250 ], // 横きりもみ浮き強		
		
		[ 123,  600,  3000,    0, 250 ], // バウンド中
		[ 124,  900,  3600,    0, 250 ], // バウンド強

		[ 125, 1400,  3000,    0, 250 ], // 斜めバウンド中
		[ 126, 1700,  3600,    0, 250 ], // 斜めバウンド強
		
		[ 127,  800, -1600,    0, 250 ], // 低浮き中
		[ 128,  900, -1800,    0, 250 ], // 低浮き強
		
		[ 129, 1200, -7200,    0, 250 ], // 垂直きりもみ浮き特
		[ 130, 2000, -8800,    0, 250 ], // 垂直きりもみ浮き超
		[ 131, 5000, -4500,    0, 250 ], // 横きりもみ浮き特		
		[ 132, 8000, -5500,    0, 250 ], // 横きりもみ浮き超
		
		[ 133, 3800, -2800,    0, 250 ], // 壁バウンド中　※横きりもみ浮き中より少し強
		[ 134, 4200, -3000,    0, 250 ], // 壁バウンド強　※横きりもみ浮き強より少し強

		[ 135, 1500, -1200,    0, 250 ], // スライド浮き中（低空で飛ぶ）
		[ 136, 2500, -1800,    0, 250 ], // スライド浮き強（低空で飛ぶ）

		[ 137,  100, -1800,    0, 250 ], // 叩き付け浮き短中（低空で飛ぶ）
		[ 138,  200, -2000,    0, 250 ], // 叩き付け浮き短強（低空で飛ぶ）

		[ 139,  600, -1800,    0, 250 ], // 叩き付け浮き中（低空で飛ぶ）
		[ 140,  900, -2000,    0, 250 ], // 叩き付け浮き強（低空で飛ぶ）
		
		[ 141, 4500, -2400,    0, 250 ], // 真横きりもみ浮き特
		[ 142, 6500, -2700,    0, 250 ], // 真横きりもみ浮き超

		[ 144, 2500, -1800,    0, 250 ], // 仰向けスライド浮き強（低空で飛ぶ）

		[ 145,  900, -500,    0, 250 ], // 落ち中
		[ 146, 1200, -500,    0, 250 ], // 落ち強
		
		[ 147,  900, -3200,    0, 250 ], // 微高浮き強	
		
		[ 148,  300, -2700,    0, 250 ], // 低垂直浮き中
		[ 149,  600, -3200,    0, 250 ], // 低垂直浮き強
		

		// ガード関係
		[ 150,  1300,     0,  -80,   0 ], // 弱ガード
		[ 151,  1500,     0,  -80,   0 ], // 中ガード
		[ 152,  1800,     0,  -80,   0 ], // 強ガード
		[ 153,  2200,     0,  -80,   0 ], // 特大ガード
		[ 154,  2700,     0,  -80,   0 ], // 超横ベクトル(超ガード)　最大27F,28F
		[ 156,  1000,     0,  -80,   0 ], // 短中ガード
		[ 157,  1300,     0,  -80,   0 ], // 短強ガード
		[ 158,  3000,     0,  -140,   0 ], // 長中ガード
		[ 159,  3600,     0,  -140,   0 ], // 長強ガード
		
		[ 170,  1000,  -500,    0, 200 ], // 空中ガードベクトル弱
		[ 171,  1100, -550,    0, 200 ], // 空中ガードベクトル中
		[ 172,  1300, -700,    0, 200 ], // 空中ガードベクトル強
		[ 176,   800, -550,    0, 200 ], // 空中ガードベクトル短中
		[ 177,  1000, -700,    0, 200 ], // 空中ガードベクトル短強
		
		[ 179,  1300, -1700,    0, 200 ], // ガード浮きベクトル中
		[ 180,  1500, -2000,    0, 200 ], // ガード浮きベクトル強

		[ 182,  2500, -5500,    0, 250 ], // ガード浮きベクトル上
		[ 183,  5500, -2500,    0, 250 ], // ガード浮きベクトル横

		[ 184,  1300,  -500,    0, 200 ], // 空中ガードベクトル横弱

		[ 185,  2700, -2700,    0, 250 ], // ガード浮きベクトル

		[ 190,  300,    0,   -30,   0 ], // 地面すべり0
		[ 191,  500,    0,   -50,   0 ], // 地面すべり1
		[ 192,  800,    0,   -80,   0 ], // 地面すべり2
		[ 193, 1100,    0,  -110,   0 ], // 地面すべり3
		[ 194, 1600,    0,  -160,   0 ], // 地面すべり4
		[ 195, 1900,    0,  -190,   0 ], // 地面すべり5
		[ 196, 2200,    0,  -220,   0 ], // 地面すべり6
		[ 197, 2800,    0,  -280,   0 ], // 地面すべり7
		[ 198, 3000,    0,  -300,   0 ], // 地面すべり8
		[ 199, 2800,    0,  -140,   0 ], // 地面すべり9
		[ 200, 3000,    0,  -150,   0 ], // 地面すべり10
		
		[ 211,  2200,     0,  -120,   0 ], // きりもみやられ弱
		[ 212,  5500,     0,  -200,   0 ], // きりもみやられ強
		
		[ 213, 3000, -2000,    0, 250 ], // スライド浮き特（低空で飛ぶ）
		[ 214, 3700, -2200,    0, 250 ], // スライド浮き超（低空で飛ぶ）
		

		[ 218,  500,    0,   -50,   0 ], // ComboBlastV（地面すべり1）
		[ 219, 3000,    0,  -300,   0 ], // その他Blast（地面すべり8）
		[ 220, 3800, -3000,    0, 250 ], // PowBlast（横きりもみ浮き強）
		[ 221, 3800, -3000,    0, 250 ], // EscBlast（横きりもみ浮き強）
		[ 222,  600, -5800,    0, 250 ], // ComboBlastV（垂直きりもみ浮き強）
		[ 223, 4200, -3000,    0, 250 ], // ComboBlastH（壁バウンド強）
		
		[ 224,  1300,     0, -100,   0 ], // リープ立やられ
		[ 225,  1000, -2600,    0, 250 ], // リープ空やられ
		[ 226,  1300,     0, -100,   0 ], // リープ屈やられ
		[ 227,  1300,     0, -100,   0 ], // リープ立ガード
		[ 228,  1000,  -700,    0, 200 ], // リープ空ガード
		[ 229,  1300,     0, -100,   0 ], // リープ屈ガード
		
		[ 230,  1750,     0,  -60,   0 ], // GC地上ガードベクトル
		[ 231,  500,  0,    0, 200 ], // GC空中ガードベクトル
		[ 232,  1600, -3100,    0, 250 ], // GC吹き飛ばし
		
		[ 234,  300, -5000,    0, 250 ], // リープきりもみ浮き

		[ 243, 3100, -3400,    0, 250 ], // 壁跳ね中

		[ 245,    0,  6600,    0, 250 ], // ピンボールバウンド叩き付け
		[ 246,  1500, -4500,    0, 250 ], // 大壁バウンド
		
		[ 247,  1700, -1800,    0, 150 ], // ボール化ダウン中
		[ 248,  2000, -2000,    0, 150 ], // ボール化ダウン強	

		[ 250,   300, -1500,    0, 250 ], // 壁はりつき
		[ 251,  2400, -2300,    0, 250 ], // 大壁バウンド
		
		[ 254,  1300,     0, -70,   0 ], // 地上ＫＯ 最大25F

		[ 255,  2000, -2300,    0, 250 ], // 壁バウンド
		
		[ 260,  3000, -4500,    0, 300 ], // big upwards diagonal
		
		[ 299,  0, 0,    0, 0 ], // 壁バウンド
		[ 300,  0, 0,    0, 250 ], // 壁バウンド
		
		
		[ 400,  3000,  3600,    0, 250 ], // 124 with high xvec
		
		[ 500,  5000,  -1500,    0, 250 ], // fast forward low rising
		
		//------------------------------------------------------------------------------■
		//255まで
	],
	/////////////////////

	SetTbl = []// ベクトル構成テーブル
}


//ベクトル構成テーブル
//
/*
この書式にあとで変える
VectorList.SetTbl[nnn] = 
{
}
*/

//const def_VL_GUN_Vertical = 1 
//const def_VL_GUN_Vertical = 1 
//ukemitime == -1 →受身不能
//ukemitime == -2 →前のベクトルを引き継ぎ（なんか受身不能が入るけど）

// 1:垂直
// 2:伏せ
// 3:すべり
// 4:跳ね（前）
// 5:跳ね（中）
// 6:跳ね（後）

//power

//local usevectornum_list = array(256, 0); //使っているvector_numのマーク用


local vectmpl = {}; //ベクトル定義の前

vectmpl.dm <- function( str )
{
	if( def_VL_PrintDebugMessage )
	{
		print("\n" + str);
	}
}

vectmpl.table <- [];
vectmpl.table.resize(1024);

//使っているvector_numのマーク用
//使っていたらカウントアップ
vectmpl.usevectornum <- array(1024, 0); 
vectmpl.usename <- {};

//ベクトル定義に追加する
vectmpl.add <- function( t ) : (vectmpl)
{
	/*
	if( "clone_vector" in t )
	{
		print("\n "+t.clone_vector+"を元にします...\n");
		local tbldata = vectmpl.table[t.clone_vector];
		
		//local ret = {}; //使うテーブルをまず用意する
		//clone元のテーブルを見て同じ構成にする
		
		local ret = KakuhoTable( tbldata );

		
		
		
		//local ctbl = DeepCopy(tbldata);
//		local ctbl = copy_clone(tbldata);
		print("\nOK...");
		delete t.clone_vector; //削除
		
		MergeTable( ctbl, t ); //base, add
		t = ctbl; //差し替える

		DrawTable( ctbl );
		//print("\nt.number:"+t.number);
	}
	*/

	//エラー出力用ベクトル名
	local vecname = "["+t.number+"]"+t.name;
	
	//nameのエラーチェック
	if( t.name in usename )
	{
		dm(format("【警告】%sのnameがダブってます",vecname));
	}
	else
	{
		usename[t.name] <- 1; //
	}
	
	
	//vector_num使っているものをマーク
	foreach( i,v in t.tbl )
	{
		local usevector_num = t.tbl[i].vector_num;
		usevectornum[usevector_num] += 1; //使ってる
	}
	
	
	//ＫＯ時のベクトル修正チェック
	//Mv_Modori_Down以外に飛ぶものはベクトル修正しないと不味い
	if( !("ko_vector" in t) || t.ko_vector==0 )
	{
		if( t.Finalize_Hit != "Mv_Modori_Down" )
		{
			dm(format("【警告】%sのko_vector指定大丈夫か？",vecname));
		}
	}	

	//tblcountのエラーチェック
	local tblcount = t.tbl.len();
	if( !( "tblcount" in t ) )
	{
		dm(format("【連絡】%sのtblcount:%dをセット",vecname,tblcount));		
		t.tblcount <- tblcount; //数は自動で入れてあげよう
	}
	else if( tblcount != t.tblcount )
	{
		dm(format("【警告】%sのtblcountの数があってない",vecname));
	}
	
	//numberのエラーチェック
	if( "name" in vectmpl.table[t.number] )
	{
		dm(format("【警告】%sのnumberがダブってます",vecname));		
	}
	
	//Finalize_Hit
	if( "Finalize_Hit" in t || "Finalize_Guard" in t )
	{
		//Finalize指定があるのでＯＫ
	}
	else
	{
		dm(format("【警告】%sのFinalize指定がありません",vecname));		
	}

	//個別tblチェック
	for( local i=0; i<t.tbl.len(); i++ )
	{
		if( "vector_returntime" in t.tbl[i] )
		{
			if( t.tbl[i].vector_returntime == 0 )
			{
				if( t.tbl[i].vector_num != 20 && ( t.tbl[i].hit_pattern != 350 && t.tbl[i].hit_pattern != 349 ) )
				{
					dm(format("【警告】%sの%dのvector_returntimeが0です",vecname,i));	
				}
			}
		}
		else
		{
			dm(format("【警告】%sの%dのvector_returntime指定がありません",vecname,i));			
		}
		
		//
		if( "vector_num" in t.tbl[i] )
		{
			local find = 0; // 見つかったかどうか
			foreach( z in VectorList.Tbl )
			{
				// 0個目がベクトル番号
				if( z[0] == t.tbl[i].vector_num ) find = 1;
			}
			if( find == 0 )
			{
				dm(format("【警告】%sの%dで未定義のvector_numを使っています",vecname,i));			
			}
		}
	}
		
	
	//vector_returntimeチェック
	
	//テーブルに追加
	vectmpl.table[t.number] = t;
	
	//print("\nt.number:"+t.number);
	//if( "ukemitime" in t.tbl[0] ) print(" ukemi:"+t.tbl[0].ukemitime);
}


/////////////////////
//vectmpl.add
vectmpl.add({
	number = 0, // 定義番号

	name = "頭やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",	
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama1,
			vector_time = def_VL_VT_Hit_Std_LV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV1, // 壁反射ベクトル影響時間
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 1, // 定義番号

	name = "頭やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama2,			
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 2, // 定義番号

	name = "頭やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama3,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 3, // 定義番号

	name = "腹やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara1,
			vector_time = def_VL_VT_Hit_Std_LV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 4, // 定義番号

	name = "腹やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara2,
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 5, // 定義番号

	name = "腹やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara3,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 12, // 定義番号

	name = "エラー回避",
	prio_vector = 100, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 20, // 定義番号

	name = "のけぞらない",
	prio_vector = 0, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	Finalize_Hit = "Mv_Modori_Down", //無いとファイナライズ通った時点でエラー
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 0,
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = 0, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
		},
	]
})

// 23と24という番号を見てやられじゃないか判断してるので変更しないように
/////////////////////
vectmpl.add({
	number = 23, // 定義番号

	name = "投げ抜け押し返し",
	prio_vector = 100, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	
	Finalize_Hit = "Mv_Modori_Nagenuke",
	Finalize_Guard = "Mv_Modori_Nagenuke",	
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VL_NagenukePat,
			guard_pattern = def_VL_NagenukePat,
			vector_time = 35, // 発生時間　15 + 15 + 硬直
			vector_returntime = 20, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})
/////////////////////
vectmpl.add({
	//投げ抜け押し返しとセット
	number = 24, // 定義番号

	name = "投げ抜けられやられ",
	prio_vector = 100, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Nagenukerare",
	Finalize_Guard = "Mv_Modori_Nagenukerare",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 24, // 使用ベクトル番号
			hit_pattern = def_VL_NagenukerarePat, //抜けられポーズ
			guard_pattern = def_VL_NagenukerarePat,
			vector_time = 22, // 発生時間 19で五分(+16して押し返しのtimeと比較)
			vector_returntime = 20, // 壁反射ベクトル時間
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})


/////////////////////
vectmpl.add({
	number = 30, // 定義番号

	name = "空攻撃浮き弱",
	prio_vector = 90, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	power=def_VL_Pow_LV1, //弱やられレベル

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 30, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},
	]
})
/////////////////////
vectmpl.add({
	number = 31, // 定義番号

	name = "空攻撃浮き中",
	prio_vector = 90, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 20, // 基本受け身不可時間
			vector_num = 31, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 32, // 定義番号

	name = "空攻撃浮き強",
	prio_vector = 90, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 22, // 基本受け身不可時間
			vector_num = 32, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 37, // 定義番号

	name = "叩き浮き短中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 37, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 137, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 38, // 定義番号

	name = "叩き浮き短強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 38, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 138, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})


/////////////////////
vectmpl.add({
	number = 39, // 定義番号

	name = "叩き浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 39, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 139, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 40, // 定義番号

	name = "叩き浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 40, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 140, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 42, // 定義番号

	name = "斜めきりもみバウンド強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 42, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 121, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 200, // 使用ベクトル番号
			hit_pattern = 349,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 43, // 定義番号

	name = "内壁大バウンド特",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 246, //壁ヒット時に移行するベクトル番号

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 43, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			// flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

// 一方通行用のすごいバウンド
/////////////////////
vectmpl.add({
	number = 45, // 定義番号

	name = "ピンボール強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 6, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 45, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki, //332代用
			vector_time = 12, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			ukemitime = -2, // 基本受け身不可時間
			vector_num = 46, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_Hit_RoofDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			ukemitime = -2, // 基本受け身不可時間
			vector_num = 45, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki, //332代用
			vector_time = 12, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			ukemitime = -2, // 基本受け身不可時間
			vector_num = 46, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_Hit_RoofDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},		
		{
			vector_num = 45, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})


/////////////////////
vectmpl.add({
	number = 50, // 定義番号

	name = "屈やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu1,
			vector_time = def_VL_VT_Hit_Cro_LV1, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 51, // 定義番号

	name = "屈やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu2,
			vector_time = def_VL_VT_Hit_Cro_LV2, // 発生時間
			vector_returntime = 19, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 52, // 定義番号

	name = "屈やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu3,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

//空攻撃地上やられ
//再帰ありで別ベクトルにします
/////////////////////
vectmpl.add({
	number = 60, // 定義番号

	name = "空攻撃頭やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 60, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama1,
			vector_time = def_VL_VT_Hit_Std_JLV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_JLV1, // 壁反射ベクトル影響時間
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 61, // 定義番号

	name = "空攻撃頭やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 61, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama2,			
			vector_time = def_VL_VT_Hit_Std_JLV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_JLV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 62, // 定義番号

	name = "空攻撃頭やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 62, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama3,
			vector_time = def_VL_VT_Hit_Std_JLV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_JLV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 63, // 定義番号

	name = "空攻撃腹やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 60, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara1,
			vector_time = def_VL_VT_Hit_Std_JLV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_JLV1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 64, // 定義番号

	name = "空攻撃腹やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 61, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara2,
			vector_time = def_VL_VT_Hit_Std_JLV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_JLV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 65, // 定義番号

	name = "空攻撃腹やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 62, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara3,
			vector_time = def_VL_VT_Hit_Std_JLV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_JLV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 66, // 定義番号

	name = "空攻撃屈やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 60, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu1,
			vector_time = def_VL_VT_Hit_Cro_JLV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_JLV1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 67, // 定義番号

	name = "空攻撃屈やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 61, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu2,
			vector_time = def_VL_VT_Hit_Cro_JLV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_JLV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 68, // 定義番号

	name = "空攻撃屈やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 62, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu3,
			vector_time = def_VL_VT_Hit_Cro_JLV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_JLV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 75, // 定義番号

	name = "立ガードやられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 75, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = def_VL_VT_Hit_Std_LV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 76, // 定義番号

	name = "立ガードやられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 76, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 77, // 定義番号

	name = "立ガードやられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 77, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 78, // 定義番号

	name = "立ガードやられ特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 78, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = def_VL_VT_Hit_Std_LV4, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV4, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 79, // 定義番号

	name = "立ガードやられ超",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 79, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = 45, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV4, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 80, // 定義番号

	name = "屈ガードやられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 75, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = def_VL_VT_Hit_Cro_LV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_LV1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 81, // 定義番号

	name = "屈ガードやられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 76, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = def_VL_VT_Hit_Cro_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 82, // 定義番号

	name = "屈ガードやられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 77, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 83, // 定義番号

	name = "屈ガードやられ特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 78, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = def_VL_VT_Hit_Cro_LV4, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_LV4, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 84, // 定義番号

	name = "屈ガードやられ超",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV0|def_VL_Pow_Furimuki, //声無しレベル＋殴られ相手に振り向き

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 79, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = 45, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_LV4, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 85, // 定義番号

	name = "特大のけぞり頭",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 6, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama3,
			vector_time = def_VL_VT_Hit_Std_LV4, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV4, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 86, // 定義番号

	name = "特大のけぞり腹",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 6, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara3,
			vector_time = def_VL_VT_Hit_Std_LV4, // 発生時間
			vector_returntime = 25, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名					
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 87, // 定義番号

	name = "特大のけぞり屈",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 6, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu3,
			vector_time = 27, // 発生時間
			vector_returntime = 25, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})



// 短やられ

/////////////////////
vectmpl.add({
	number = 90, // 定義番号

	name = "頭やられ短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 90, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama2,			
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 91, // 定義番号

	name = "頭やられ短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 91, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama3,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 92, // 定義番号

	name = "腹やられ短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 90, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara2,
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 93, // 定義番号

	name = "腹やられ短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 91, // 使用ベクトル番号
			hit_pattern = def_VLP_Hara3,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 94, // 定義番号

	name = "屈やられ短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 90, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu2,
			vector_time = def_VL_VT_Hit_Cro_LV2, // 発生時間
			vector_returntime = 19, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 95, // 定義番号

	name = "屈やられ短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 91, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu3,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})







/////////////////////
vectmpl.add({
	number = 99, // 定義番号

	name = "KOダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 112, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

//CLI用やられ



/////////////////////
vectmpl.add({
	number = 100, // 定義番号

	name = "横きりもみ低浮き特",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 100, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 101, // 定義番号

	name = "横きりもみ低浮き超",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 101, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 198, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 102, // 定義番号

	name = "垂直低きりもみ浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 113, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 103, // 定義番号

	name = "垂直低きりもみ浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 105, // 定義番号

	name = "水平浮きはりつき中",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 250, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 105, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			// flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})
/////////////////////
vectmpl.add({
	number = 106, // 定義番号

	name = "水平浮きはりつき強",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 250, //壁ヒット時に移行するベクトル番号

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 106, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			// flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 107, // 定義番号

	name = "斜めスライド特",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 125, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 213, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名	
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名			
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 199, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 108, // 定義番号

	name = "斜めスライド超",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 126, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 214, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名	
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名			
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 200, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})


/////////////////////
vectmpl.add({
	number = 110, // 定義番号

	name = "浮き弱",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 110, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 111, // 定義番号

	name = "浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 20, // 基本受け身不可時間
			vector_num = 111, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 112, // 定義番号

	name = "浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 22, // 基本受け身不可時間
			vector_num = 112, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 113, // 定義番号

	name = "垂直浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 113, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 114, // 定義番号

	name = "垂直浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 20, // 基本受け身不可時間
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 115, // 定義番号

	name = "垂直きりもみ浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 115, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 116, // 定義番号

	name = "垂直きりもみ浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 116, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 117, // 定義番号

	name = "斜め浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 117, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 118, // 定義番号

	name = "斜め浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 118, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 194, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 119, // 定義番号

	name = "横浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 119, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 195, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 120, // 定義番号

	name = "横浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 120, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 196, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 121, // 定義番号

	name = "横きりもみ浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 121, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 122, // 定義番号

	name = "横きりもみ浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 122, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 198, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 123, // 定義番号

	name = "バウンド中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 123, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 113, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 124, // 定義番号

	name = "バウンド強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 125, // 定義番号

	name = "斜めバウンド中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 125, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 117, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名	
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名			
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 126, // 定義番号

	name = "斜めバウンド強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 126, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 118, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 194, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 127, // 定義番号

	name = "低浮き中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 127, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 128, // 定義番号

	name = "低浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 128, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 129, // 定義番号

	name = "垂直きりもみ浮き特",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 129, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 130, // 定義番号

	name = "垂直きりもみ浮き超",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 130, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 131, // 定義番号

	name = "横きりもみ浮き特",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 131, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 198, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 132, // 定義番号

	name = "横きりもみ浮き超",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 132, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 198, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

// 壁バウンド
/////////////////////
vectmpl.add({
	number = 133, // 定義番号

	name = "壁バウンド中",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})
/////////////////////
vectmpl.add({
	number = 134, // 定義番号

	name = "壁バウンド強",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号
	
	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号
	counterhit_vector = 142, // カウンターヒット時だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 134, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 135, // 定義番号

	name = "斜めスライド中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 125, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 135, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名	
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名			
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 136, // 定義番号

	name = "斜めスライド強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 126, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 136, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名	
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名			
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 137, // 定義番号

	name = "壁はりつき中",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 250, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})
/////////////////////
vectmpl.add({
	number = 138, // 定義番号

	name = "壁はりつき強",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 250, //壁ヒット時に移行するベクトル番号

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 134, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 139, // 定義番号

	name = "叩き付け中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 123, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 139, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 140, // 定義番号

	name = "叩き付け強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 140, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

// 壁バウンド(端以外でも跳ね返る強いもの)
/////////////////////
vectmpl.add({
	number = 141, // 定義番号

	name = "内壁バウンド中",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			// flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})
/////////////////////
vectmpl.add({
	number = 142, // 定義番号

	name = "内壁バウンド強",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 134, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			// flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 144, // 定義番号

	name = "あお向けスライド浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 144, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 145, // 定義番号

	name = "落ち中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 145, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 146, // 定義番号

	name = "落ち強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 146, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 147, // 定義番号

	name = "斜め長滑り中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 125, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 199, // 使用ベクトル番号
			hit_pattern = 349,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 148, // 定義番号

	name = "斜め長滑り強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 126, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 200, // 使用ベクトル番号
			hit_pattern = 349,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})



//ガードセット
/////////////////////
vectmpl.add({
	number = 150, // 定義番号

	name = "立ガード弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV1, //弱やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 150, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV1, // 発生時間
			vector_returntime = 14, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 151, // 定義番号

	name = "立ガード中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 151, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 152, // 定義番号

	name = "立ガード強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 152, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 153, // 定義番号

	name = "立ガード特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 153, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV4, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 154, // 定義番号

	name = "立ガード超",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 154, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV5, // 発生時間
			vector_returntime = 27, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 156, // 定義番号

	name = "立ガード短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 156, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 157, // 定義番号

	name = "立ガード短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 157, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 158, // 定義番号

	name = "立ガード長中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 158, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 159, // 定義番号

	name = "立ガード長強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 159, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})







/////////////////////
vectmpl.add({
	number = 160, // 定義番号

	name = "屈ガード弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV1, //弱やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 150, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV1, // 発生時間
			vector_returntime = 14, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 161, // 定義番号

	name = "屈ガード中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 151, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 17, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 162, // 定義番号

	name = "屈ガード強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 152, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 163, // 定義番号

	name = "屈ガード特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 153, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV4, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 164, // 定義番号

	name = "屈ガード超",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 154, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV5, // 発生時間
			vector_returntime = 27, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 166, // 定義番号

	name = "屈ガード短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 156, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 17, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 167, // 定義番号

	name = "屈ガード短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 157, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 168, // 定義番号

	name = "屈ガード長中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 158, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 17, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 169, // 定義番号

	name = "屈ガード長強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 159, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})





















/////////////////////
vectmpl.add({
	number = 170, // 定義番号

	name = "空ガード弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 170, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})
/////////////////////
vectmpl.add({
	number = 171, // 定義番号

	name = "空ガード中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 171, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV2, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})
/////////////////////
vectmpl.add({
	number = 172, // 定義番号

	name = "空ガード強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 172, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 173, // 定義番号

	name = "空ガード特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 172, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV4, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 174, // 定義番号

	name = "空ガード超",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 172, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV5, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 176, // 定義番号

	name = "空ガード短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 176, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV2, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})
/////////////////////
vectmpl.add({
	number = 177, // 定義番号

	name = "空ガード短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 177, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

// ●ガードフロート
// 追加する時はハメを無くすために
// 無敵時間をつける必要があるので、StdMoveTblをいじること

/////////////////////
vectmpl.add({
	number = 179, // 定義番号

	name = "ガード浮き中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_GuardFloat, // ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 179, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV2, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})
/////////////////////
vectmpl.add({
	number = 180, // 定義番号

	name = "ガード浮き強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_GuardFloat, //強やられレベル,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 180, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

//
/////////////////////
vectmpl.add({
	number = 182, // 定義番号

	name = "ガード超浮き上",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_GuardFloat, //強やられレベル,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 182, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 183, // 定義番号

	name = "ガード超浮き横",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_GuardFloat, //強やられレベル,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 183, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})



/////////////////////
vectmpl.add({
	number = 184, // 定義番号

	name = "空ガード横弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 184, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 186, // 定義番号

	name = "高バウンド中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 123, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 103, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 187, // 定義番号

	name = "高バウンド強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 104, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 188, // 定義番号

	name = "低バウンド中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 123, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 148, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 189, // 定義番号

	name = "低バウンド強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 149, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})


/////////////////////
vectmpl.add({
	number = 190, // 定義番号

	name = "頭強CHバウンド",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 193, //CHバウンド

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama3,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 191, // 定義番号

	name = "屈強CHバウンド",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 193, //CHバウンド

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu3,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 192, // 定義番号

	name = "叩強CHバウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	counterhit_vector = 193, //CHバウンド

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 140, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 193, // 定義番号

	name = "CHバウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 194, // 定義番号

	name = "壁不能はりつき強",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	
	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号
	counterhit_vector = 142, // カウンターヒット時だった場合に移行するベクトルテーブル番号
	wallbound_vector = 195, //壁ヒット時に移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 134, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 195, // 定義番号

	name = "壁不能はりつき", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	hitflag_set = 10, // 「当たった時」に壁バウンドをセット	

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1022, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 250, // 使用ベクトル番号
			hit_pattern = def_VLP_WallBound,
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_WallBound",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},				
	]
})

/////////////////////
vectmpl.add({
	number = 196, // 定義番号

	name = "微高浮き強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 147, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

// 壁バウンドより少し横吹き飛びが弱いもの
// 壁はりつき
/////////////////////
vectmpl.add({
	number = 197, // 定義番号

	name = "壁跳ね中",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 250, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 243, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

// 壁バウンド系の重なり判定チェックを行うもの
// 基本的にこっちでいい気がする
vectmpl.add({
	number = 200, // 定義番号

	name = "壁バウンド中_重有",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})
/////////////////////
vectmpl.add({
	number = 201, // 定義番号

	name = "壁バウンド強_重有",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号
	
	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 134, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 202, // 定義番号

	name = "壁はりつき中_重有",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 250, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})
/////////////////////
vectmpl.add({
	number = 203, // 定義番号

	name = "壁はりつき強_重有",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 250, //壁ヒット時に移行するベクトル番号

	hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 134, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

// 壁バウンド(端以外でも跳ね返る強いもの)
/////////////////////
vectmpl.add({
	number = 204, // 定義番号

	name = "内壁バウンド中_重有",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			// flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})
/////////////////////
vectmpl.add({
	number = 205, // 定義番号

	name = "内壁バウンド強_重有",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 134, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			// flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})



/////////////////////
vectmpl.add({
	number = 206, // 定義番号

	name = "横きりもみ浮き特壁",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 251, //壁ヒット時に移行するベクトル番号
	
	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 131, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
			flag_boundwall = true, // 
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 198, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 207, // 定義番号

	name = "横きりもみ浮き超壁",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 251, //壁ヒット時に移行するベクトル番号
	
	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 132, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
			flag_boundwall = true, // 
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 198, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 209, // 定義番号

	name = "真横きりもみ浮き超壁",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 251, //壁ヒット時に移行するベクトル番号
	
	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 142, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
			flag_boundwall = true, // 
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 198, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 211, // 定義番号

	name = "きりもみやられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_KirimomiYarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 211, // 使用ベクトル番号
			hit_pattern = def_VLP_Kirimomi,
			vector_time = def_VL_VT_Hit_Std_LV4, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			vector_returnvalue = 40, // 壁反射ベクトル割合（100でx1.0、記述無しだと100
		},
	]
})

/////////////////////
vectmpl.add({
	number = 212, // 定義番号

	name = "きりもみやられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_KirimomiYarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 212, // 使用ベクトル番号
			hit_pattern = def_VLP_Kirimomi,
			vector_time = def_VL_VT_Hit_Std_LV5, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			vector_returnvalue = 40, // 壁反射ベクトル割合（100でx1.0、記述無しだと100			
		},
	]
})


/////////////////////
vectmpl.add({
	number = 213, // 定義番号

	name = "ガード超固浮き横",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_GuardFloat, //強やられレベル,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 183, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 32, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

//
/////////////////////
vectmpl.add({
	number = 215, // 定義番号

	name = "切り札ガード超浮き上",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_NoAdvFrameSet|def_VL_Pow_GuardFloat, //強やられレベル,アドバ無効化,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 182, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 26,//def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 216, // 定義番号

	name = "切り札ガード超浮き横",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_NoAdvFrameSet|def_VL_Pow_GuardFloat, //強やられレベル,アドバ無効化,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 183, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 21,//def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 217, // 定義番号

	name = "切り札ガード超浮き",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_NoAdvFrameSet|def_VL_Pow_GuardFloat, //強やられレベル,アドバ無効化,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 185, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 25,//def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 220, // 定義番号

	name = "ブラストPow",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 220, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 219, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 221, // 定義番号

	name = "ブラストEsc",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 221, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 219, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 222, // 定義番号

	name = "ブラストComboV",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 222, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 218, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 223, // 定義番号

	name = "ブラストComboH",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号
	
	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 122, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 223, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 219, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 224, // 定義番号

	name = "リープ立やられ",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 224, // 使用ベクトル番号
			hit_pattern = def_VLP_Atama3,
			vector_time = def_VL_VT_Hit_Std_JLV4+2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_JLV4, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 225, // 定義番号

	name = "リープ空やられ",
	prio_vector = 90, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 20, // 基本受け身不可時間
			vector_num = 225, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 226, // 定義番号

	name = "リープ屈やられ",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 226, // 使用ベクトル番号
			hit_pattern = def_VLP_Kutu3,
			vector_time = def_VL_VT_Hit_Cro_JLV4+2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_JLV4, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 227, // 定義番号

	name = "リープ立ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 227, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = 19, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 228, // 定義番号

	name = "リープ空ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 228, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})


/////////////////////
vectmpl.add({
	number = 229, // 定義番号

	name = "リープ屈ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 229, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = 19, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})


/////////////////////
vectmpl.add({
	number = 230, // 定義番号

	name = "GC立ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 230, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = 18, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 231, // 定義番号

	name = "GC空ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 231, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 14, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 232, // 定義番号

	name = "GC屈ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 230, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = 18, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 233, // 定義番号

	name = "GC吹き飛ばし",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 20, // 基本受け身不可時間
			vector_num = 232, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 234, // 定義番号

	name = "リープきりもみ浮き",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 238, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 27, // 基本受け身不可時間
			vector_num = 234, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 236, // 定義番号

	name = "あお向け特殊追い討ち",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_type = 1, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = 349,

			vector_time = 25, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 基本受け身不可時間
			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			// flag_down = true, // ダウン状態扱いとする　※ここが237と違う
		},
		{
			vector_type = 1, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 290,

			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 基本受け身不可時間
			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_down = true, // ダウン状態扱いとする　※ここが237と違う
		},		
	]
})

/////////////////////
vectmpl.add({
	number = 237, // 定義番号

	name = "あお向け追い討ち",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 1, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeOiutiBound,

			vector_time = 14, // 発生時間
			vector_returntime = 14, // 壁反射ベクトル
			ukemitime = -1, // 基本受け身不可時間
			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 238, // 定義番号

	name = "うつ伏せ追い討ち",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 1, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseOiutiBound,

			vector_time = 14, // 発生時間
			vector_returntime = 14, // 壁反射ベクトル
			ukemitime = -1, // 基本受け身不可時間
			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 240, // 定義番号

	name = "あお向け起き上がり",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeOki, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 241, // 定義番号

	name = "うつ伏せ起き上がり",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseOki, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 242, // 定義番号

	name = "重傷起き上がり",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_FatalOki, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

// ピンボールみたいに叩き付けて跳ねる
/////////////////////
vectmpl.add({
	number = 245, // 定義番号

	name = "バウンド超",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 245, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 116, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})


/////////////////////
vectmpl.add({
	number = 246, // 定義番号

	name = "壁大バウンド", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	
	hitflag_set = 10, // 「当たった時」に壁バウンドをセット	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 246, // 使用ベクトル番号
			hit_pattern = def_VLP_WallBound,
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			out_effect_name = "Eff_WallBound",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},				
	]
})


/////////////////////
vectmpl.add({
	number = 247, // 定義番号

	name = "ボール化ダウン中",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 247, // 使用ベクトル番号
			hit_pattern = 343,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 248, // 定義番号

	name = "ボール化ダウン強",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 248, // 使用ベクトル番号
			hit_pattern = 343,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})


/////////////////////
vectmpl.add({
	number = 249, // 定義番号

	name = "透明ダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 24, // 基本受け身不可時間
			vector_num = 112, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

//def_VLP_SuityokuUki

/////////////////////
vectmpl.add({
	number = 250, // 定義番号

	name = "小壁バウンド", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	hitflag_set = 10, // 「当たった時」に壁バウンドをセット	

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 250, // 使用ベクトル番号
			hit_pattern = def_VLP_WallBound,
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_WallBound",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},				
	]
})

/////////////////////
vectmpl.add({
	number = 251, // 定義番号

	name = "大壁バウンド", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	hitflag_set = 10, // 「当たった時」に壁バウンドをセット	

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 251, // 使用ベクトル番号
			hit_pattern = def_VLP_WallBound,
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_WallBound",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},				
	]
})













/////////////////////
vectmpl.add({
	number = 252, // 定義番号

	name = "無声ダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 24, // 基本受け身不可時間
			vector_num = 112, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 253, // 定義番号

	name = "KOダウン追い討ち", // 
	prio_vector = 990, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 26, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名		
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

/////////////////////
vectmpl.add({
	number = 254, // 定義番号

	name = "KOのけぞり", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 254, // 使用ベクトル番号
			hit_pattern = def_VLP_HizaKuzure,
			vector_time = 25, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			//flag_isgroundvector = true, // 地上のけぞりベクトル　この状態で何かあたったら浮いてＫＯにしたいので
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_HizaKuzureOti,
			vector_time = 4, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},		
	]
})




/////////////////////
vectmpl.add({
	number = 255, // 定義番号

	name = "壁バウンド", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	
	hitflag_set = 10, // 「当たった時」に壁バウンドをセット	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 255, // 使用ベクトル番号
			hit_pattern = def_VLP_WallBound,
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			out_effect_name = "Eff_WallBound",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},				
	]
})

vectmpl.add({
	number = 300, // 定義番号

	name = "124_longX",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 400, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

vectmpl.add({
	number = 600, // 定義番号

	name = "newkirito22exfull",
	prio_vector = 100, // ベクトル優先度
		
	hitflag_set = 1, // 「当たった時」に壁バウンドをセット	
	hitflag_check = 1, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 601, // hitflag_check が有効だった場合に移行するベクトルテーブル番号
	
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル


	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 255, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

vectmpl.add({
	number = 601, // 定義番号

	name = "newkirito22exreflex",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

vectmpl.add({
	number = 602, // 定義番号

	name = "test",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	// wallbound_vector = 255, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_check = 10, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 601, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 700, // 定義番号

	name = "qen_0202Blast",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 701, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 701, // 定義番号

	name = "qen_0202Blast_DownHit",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//downhit_vector = 700, // flag_down で移行するベクトル番号
	
	hitflag_set = 1, // 「当たった時」に壁バウンドをセット	
	hitflag_check = 1, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 114, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 237, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 750, // 定義番号

	name = "vec_113_relaunch",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 751, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 113, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 751, // 定義番号

	name = "vec_113_relaunch_downhit",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//downhit_vector = 238, // flag_down で移行するベクトル番号
	
	hitflag_set = 1, // 「当たった時」に壁バウンドをセット	
	hitflag_check = 1, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 238, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 113, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 760, // 定義番号

	name = "vec_118_relaunch",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 761, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 118, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 194, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 761, // 定義番号

	name = "vec_118_relaunch_downhit",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//downhit_vector = 237, // flag_down で移行するベクトル番号
	
	hitflag_set = 1, // 「当たった時」に壁バウンドをセット	
	hitflag_check = 1, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 238, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 118, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 194, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 770, // 定義番号

	name = "misaka_ic22",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 771, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 116, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 771, // 定義番号

	name = "misaka_ic22_DownHit"
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//downhit_vector = 237, // flag_down で移行するベクトル番号
	
	hitflag_set = 1, // 「当たった時」に壁バウンドをセット	
	hitflag_check = 1, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 237, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 116, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiSuityoku,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 775, // 定義番号

	name = "slv_0202x",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_type = 1, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = 349,

			vector_time = 25, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 基本受け身不可時間
			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_down = true, // ダウン状態扱いとする　※ここが237と違う
		},
		{
			vector_type = 1, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 290,

			vector_time = 26, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 基本受け身不可時間
			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_down = true, // ダウン状態扱いとする　※ここが237と違う
		},		
	]
})

vectmpl.add({
	number = 776, // 定義番号

	name = "slv_2ab",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	counterhit_vector = 193, //CHバウンド

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 140, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = 15, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

vectmpl.add({
	number = 811, // 定義番号

	name = "111_ground_ukemi",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 20, // 基本受け身不可時間
			vector_num = 111, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},
	]
})



vectmpl.add({
	number = 820, // 定義番号

	name = "135_relaunch",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 123, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 125, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 135, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名	
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名			
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})


vectmpl.add({
	number = 830, // 定義番号

	name = "vec_124_relaunch",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 830, // flag_down で移行するベクトル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 124, // 使用ベクトル番号
			hit_pattern = def_VLP_Oti, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 114, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_down = true, // ダウン状態扱いとする
		},			
	]
})

//def_VLP_SuityokuUki

vectmpl.add({
	number = 840, // 定義番号

	name = "137_stick",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 900, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_set = 22, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_check = 20, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 137, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 250, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 841, // 定義番号

	name = "fast_forward_norise_wallstick",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 900, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_set = 22, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_check = 20, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 133, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 500, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 250, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 842, // 定義番号

	name = "137_stick_120f",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	wallbound_vector = 901, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	//hitflag_set = 22, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_check = 21, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 137, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 16, // 基本受け身不可時間
			vector_num = 133, // 使用ベクトル番号
			hit_pattern = def_VLP_KiriUkiYoko,
			vector_time = -1, // 発生時間
			vector_returntime = 250, // 壁反射ベクトル
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			flag_erasekasanari = true, // 重なり消去
			wall_ukemi_num = -1, // 壁受け身不可
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 197, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 850, // 定義番号

	name = "bigforward_wallstick",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	
	wallbound_vector = 900, //壁ヒット時に移行するベクトル番号
	Finalize_Hit = "Mv_Modori_Down",

	hitflag_set = 20, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_check = 20, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 133, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 22, // 基本受け身不可時間
			vector_num = 260, // 使用ベクトル番号
			hit_pattern = def_VLP_Uki,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			wall_ukemi_num = -1, // 壁受け身不可
			
			flag_boundwall = true, // 
			flag_boundwall_stageside = true, // ステージ端のみ壁にぶつかる
			
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 193, // 使用ベクトル番号
			hit_pattern = def_VLP_AomukeBound,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			flag_down = true, // ダウン状態扱いとする
		},
	]
})

vectmpl.add({
	number = 899, // 定義番号

	name = "wall_stick_make", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	hitflag_check = 11, // 「当たった時」に壁バウンドがセットされてるかチェック
	hitflag_vector = 121, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 299, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = 100, // 発生時間
			vector_returntime = 200, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "WallStickRect",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 250, // 使用ベクトル番号
			hit_pattern = def_VLP_WallBound,
			vector_time = -1, // 発生時間
			vector_returntime = 200, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_WallBound",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},				
	]
})

/////////////////////
vectmpl.add({
	number = 900, // 定義番号

	name = "wall_stick", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	hitflag_set = 20, // 「当たった時」に壁バウンドがセットされてるかチェック
	//hitflag_check = 22, // 「当たった時」に壁バウンドがセットされてるかチェック
	//hitflag_vector = 133, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 299, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_WallBound",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},				
	]
})

vectmpl.add({
	number = 901, // 定義番号

	name = "wall_stick_fixed_long", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	hitflag_set = 21, // 「当たった時」に壁バウンドがセットされてるかチェック
	//hitflag_check = 22, // 「当たった時」に壁バウンドがセットされてるかチェック
	//hitflag_vector = 133, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 299, // 使用ベクトル番号
			hit_pattern = def_VLP_SuityokuUki,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_WallBound",
			ground_ukemi_num = -1, // 床受け身番号
			flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VLP_UtubuseBigDown,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
			flag_down = true, // ダウン状態扱いとする
		},				
	]
})



foreach( i, v in vectmpl.usevectornum )
{
	if( v==0 )
	{
		local find = 0; //定義してあるか？
		foreach( z in VectorList.Tbl )
		{
			if( z[0] == i ) find = 1; //定義してあるのにどこにも使ってない
		}
		if( find && def_VL_PrintDebugMessage ) print( format("\n VectorList.Tbl[%3d]が未使用です",i ) );
	}
}

//↓デバッグ用ベクトル一覧出力
/*
for( local i=0;i<256;i++ )
{
	local target = vectmpl.table[i];
	print(format("\n%3d ",i));
	if( "number" in target )
	{
		local name = ("name" in target)? target.name : "";
		print(name);
	}
	else
	{
	
	}
}
//↑デバッグ用ベクトル一覧出力
*/

//vectmpl.tableから実際に使うベクトルテーブルリストを作成する

VectorList.SetTbl.resize( 1024 ); //サイズを合わせる

local findcount = 0; //見つけた数

//print("\n");
foreach( i, v in vectmpl.table )
{
	if( "number" in v)
	{
		/*
		print(format(
		"%3d vec: %3d %s \n",findcount,i,v.name
		
		));
		*/
		VectorList.SetTbl[findcount] = v; //入れる
		findcount++;
	}
}
VectorList.SetTbl.resize( findcount ); //サイズを合わせる





//print("\name:"+vectmpl.table[10].name);
//print("\nukemitime:"+vectmpl.table[10].tbl[0].ukemitime);

print( format("\n[VectorTable] %d個のベクトルを登録しました",findcount ));