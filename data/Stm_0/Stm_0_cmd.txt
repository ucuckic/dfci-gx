//コマンドテーブル skillは格ゲーコマンド表記
btl_debPrint2("\n[cmd.txt]");

local t =
{
	MultiJump_F = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }	},
	MultiJump_N = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }	},
	MultiJump_B = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }	},
	MultiJumpCancel_F = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }	},
	MultiJumpCancel_N = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }	},
	MultiJumpCancel_B = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }	},

	Skill_236A = 
	{
		function CmdBeforeFunc()
		{
			 if( BCMDTbl.CheckComboLimit( DEF_BS_CL_Skill00 ) ) return 0;
		}
	},
	
	Skill_236B = 
	{
		function CmdBeforeFunc()
		{
			 if( BCMDTbl.CheckComboLimit( DEF_BS_CL_Skill01 ) ) return 0;
		}
	},
	
	Skill_236C = 
	{
		function CmdBeforeFunc()
		{
			 if( BCMDTbl.CheckComboLimit( DEF_BS_CL_Skill02 ) ) return 0;
		}
	},
	
	Skill_236EX = 
	{
	},
	
	
	/*
	Skill_236Gun_AddA = 
	{
		num = def_CN_Skill_AddCommand5,
		command = ["214A"],
		
		CmdCheck = 
		{
			SkillType = "AddCommand",
			MvCheck = { Only = ["Mv_Skill_236B","Mv_Skill_236C"] },
			//FrameIDCheck = { Only = 100 },
			HitStatus = "Hit",
		},
		
		UpdateTable = { name = "Mv_Skill_236A", },
	},
	*/
	
	Skill_J236A = {},
	Skill_J236B = {},
	Skill_J236C = {},
	Skill_J236EX = {},

	Skill_J214A = {},
	Skill_J214B = {},
	Skill_J214C = {},
	Skill_J214EX = {},

	Skill_214A = {},
	Skill_214B = {},
	Skill_214C = {},
	Skill_214EX = {},
	
	Atk_C_C = 
	{
		CmdCheck = { SkillType = "AddCommand", MvCheck = { Only = ["Mv_Atk_StdC"] }, CommandButton = def_PP_CBS_ButtonC },
		function CmdBeforeFunc()
		{
			local CancelFlag = BCMDTbl.CheckCancelFlag(0);
			
			if( CancelFlag ) return 1;
			return 0;
		},
	},

	
	Atk_Std6A = {},
	
	Skill_Sousai = {},
	Skill_Sousai2 = {},
	Skill_Sousai4 = {},
	Skill_Sousai4_JAdd = {},
	
	Skill_Kirifuda = {},
	
	Skill_41236SP = {},
	
	Skill_63214SP = {},	
	
	Std_Throw_A_AirC = {},
}

local ar =
[
	{
		CheckMoveName="Mv_Atk_StdA",
		UpdateMoveName="Mv_Atk_StdB",
	},
	{
		CheckMoveName="Mv_Atk_StdB",
		UpdateMoveName="Mv_Atk_StdC",
		ResetTmplName="Std_Atk_StdB"
	},
	{
		CheckMoveName="Mv_Atk_StdC",
		UpdateMoveName="Mv_Skill_Sousai",
		ResetTmplName="Std_Atk_StdC",
		CmdTmplFlags=def_CMDFlags_AnnounceSmaetSteer, //スマートステアアナウンスの追加
	},
	{
		CheckMoveName="Mv_Skill_Sousai",
		UpdateMoveName="Mv_Skill_214EX",
		ResetTmplName="Skill_Sousai",
		CmdCheck = 
		{
			SkillType = "ExSpecial",
			HitStatus="Damage",
			Cost = { ComboGauge = 10000 },
		}
	},
]
Battle_Std.MakeStdCombo( t, ar, 0 );

local ar =
[
	{
		CheckMoveName="Mv_Atk_CroA",
		UpdateMoveName="Mv_Atk_CroB",
	},
	{
		CheckMoveName="Mv_Atk_CroB",
		UpdateMoveName="Mv_Atk_StdC",
		ResetTmplName="Std_Atk_CroB"
	},
	{
		CheckMoveName="Mv_Atk_StdC",
		UpdateMoveName="Mv_Skill_Sousai",
		ResetTmplName="Std_Atk_StdC",
		CmdTmplFlags=def_CMDFlags_AnnounceSmaetSteerCro, //スマートステアアナウンスの追加
	},
	{
		CheckMoveName="Mv_Skill_Sousai",
		UpdateMoveName="Mv_Skill_214EX",
		ResetTmplName="Skill_Sousai",
		CmdCheck = 
		{
			SkillType = "ExSpecial",
			HitStatus="Damage",
			Cost = { ComboGauge = 10000 },
		}
	},
]
Battle_Std.MakeStdCombo( t, ar, 1 );

local ar =
[
	{
		CheckMoveName="Mv_Atk_AirA",
		UpdateMoveName="Mv_Atk_AirB",
	},
	{
		CheckMoveName="Mv_Atk_AirB",
		UpdateMoveName="Mv_Atk_AirC",
		ResetTmplName="Std_Atk_AirB",
		CmdTmplFlags=def_CMDFlags_AnnounceSmaetSteerAir, //スマートステアアナウンスの追加
	},
]
Battle_Std.MakeStdCombo( t, ar, 2 );

STM_CommandTable <- Battle_Std.MakeCommandTable( t );

_dp(" -> Load OK");
